{"version":3,"sources":["components/Signin/show-password.svg","components/Signin/hide-password.svg","components/Signin/SigninElements.js","components/Signin/index.js"],"names":["Container","styled","div","FormWrap","Icon","Link","FormContent","Form","form","FormH1","h1","FormLabel","label","FormInput","input","FormInputPass","FormButton","button","Img","img","SignIn","props","useState","email","setEmail","password","setPassword","error","setError","loading","setLoading","isRevealPwd","setIsRevealPwd","useEffect","document","title","handelSubmit","e","preventDefault","axios","post","then","response","setUserSession","data","token","history","push","catch","status","message","console","to","onSubmit","autoComplete","htmlFor","value","type","name","required","placeholder","onChange","target","alt","src","hidePwdImg","showPwdImg","onClick","prevState","style","color","textAlign","paddingBottom","disabled"],"mappings":"iLAAe,MAA0B,0CCA1B,MAA0B,0C,sBCG5BA,EAAYC,IAAOC,IAAV,2SAgBTC,EAAUF,IAAOC,IAAT,yMAWRE,EAAOH,YAAOI,IAAPJ,CAAH,oRAcJK,EAAcL,IAAOC,IAAV,0MAWXK,EAAON,IAAOO,KAAV,gWAiBJC,EAASR,IAAOS,GAAV,8IAQNC,EAAYV,IAAOW,MAAV,4FAMTC,EAAYZ,IAAOa,MAAV,0HAMTC,EAAgBd,IAAOa,MAAV,mJAQbE,EAAaf,IAAOgB,OAAV,sLAUVC,EAAMjB,IAAOkB,IAAV,8H,OCrCDC,UAjEA,SAACC,GAEZ,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA6BN,oBAAS,GAAtC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAsCR,oBAAS,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACAC,qBAAU,WACZC,SAASC,MAAQ,4BAEf,IAAMC,EAAe,SAACC,GAClBA,EAAEC,iBACFV,EAAS,MACTE,GAAW,GACXS,IAAMC,KAAK,cAAe,CACtBjB,MAAOA,EACPE,SAAUA,IACXgB,MAAK,SAAAC,GACJZ,GAAW,GACXa,YAAeD,EAASE,KAAKC,OAC7BxB,EAAMyB,QAAQC,KAAK,iBACpBC,OAAM,SAAArB,GACLG,GAAW,GACkB,MAA1BH,EAAMe,SAASO,QAA4C,MAA1BtB,EAAMe,SAASO,OAC/CrB,EAASD,EAAMe,SAASE,KAAKM,SAG7BtB,EAAS,gDAEbuB,QAAQxB,MAAM,aAAcA,OAGpC,OACI,cAAC3B,EAAD,UACI,eAACG,EAAD,WACI,cAACC,EAAD,CAAMgD,GAAG,IAAT,sBACA,cAAC9C,EAAD,UACI,eAACC,EAAD,CAAM8C,SAAWjB,EAAckB,aAAa,MAA5C,UACI,cAAC7C,EAAD,sCACA,cAACE,EAAD,CAAW4C,QAAQ,MAAnB,mBACA,cAAC1C,EAAD,CAAW2C,MAAOjC,EAAOkC,KAAK,QAAQC,KAAK,QAAQC,UAAQ,EAAEC,YAAY,mBAAmBC,SAAU,SAAAxB,GAAC,OAAIb,EAASa,EAAEyB,OAAON,UAC7H,cAAC7C,EAAD,CAAW4C,QAAQ,MAAnB,sBACA,cAACxC,EAAD,CAAeyC,MAAO/B,EAAUgC,KAAM1B,EAAc,OAAS,WAAY2B,KAAK,WAAWC,UAAQ,EAAEC,YAAY,sBAAsBC,SAAU,SAAAxB,GAAC,OAAIX,EAAYW,EAAEyB,OAAON,UACzK,cAACtC,EAAD,CACI6C,IAAI,GACJ5B,MAAOJ,EAAc,gBAAkB,gBACvCiC,IAAKjC,EAAckC,EAAaC,EAChCC,QAAS,kBAAMnC,GAAe,SAAAoC,GAAS,OAAKA,QAE/CzC,GAAS,mBAAG0C,MAAO,CAACC,MAAO,MAAMC,UAAW,SAAUC,cAAe,QAA5D,SAAsE7C,IAChF,cAACX,EAAD,CAAYyC,KAAK,SAASD,MAEtB3B,EACA,qBAAKmC,IAAI,6DAA6DD,IAAI,WAC1E,QAEAU,SAAU5C,EAASwB,SAAUjB,EANjC","file":"static/js/7.d17ce54b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/show-password.7468b270.svg\";","export default __webpack_public_path__ + \"static/media/hide-password.2aaf769d.svg\";","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Container = styled.div`\r\n    min-hight: 692px;\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 0;\r\n    overflow: hidden;\r\n    background: linear-gradient(\r\n        108deg,\r\n        rgba(1, 147, 86, 1) 0%,\r\n        rgba(10, 201, 122, 1) 100%\r\n    );\r\n`;\r\n\r\nexport const FormWrap =styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    @media screen and (max-width: 480px) {\r\n        height: 80%;\r\n    }\r\n`;\r\n\r\nexport const Icon = styled(Link)`\r\n    margin-left: 32px;\r\n    margin-top: 32px;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n\r\n    @media screen and (max-width: 480px) {\r\n        margin-left: 16px;\r\n        margiin-right: 8px;\r\n    }\r\n`;\r\n\r\nexport const FormContent = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    @media screen and (max-width: 480px){\r\n        padding: 10px;\r\n    }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n    background: #010101;\r\n    max-width: 400px;\r\n    height: auto;\r\n    width: 100%;\r\n    z-index: 1;\r\n    display: grid;\r\n    margin: 0 auto;\r\n    padding: 80px 32px;\r\n    border-radius: 4px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.9;);\r\n\r\n    @media screen and (max-width: 400px) {\r\n        padding: 32px 32px;\r\n    }\r\n`;\r\n\r\nexport const FormH1 = styled.h1`\r\n    margin-bottom: 40px;\r\n    color: #fff;\r\n    font-size: 20px;\r\n    font-weight: 400;\r\n    text-align: center;\r\n`\r\n\r\nexport const FormLabel = styled.label`\r\n    margin-bottom: 8px;\r\n    font-size:14px;\r\n    color: #fff;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n    padding: 16px 16px;\r\n    margin-bottom: 32px;\r\n    border: none;\r\n    border-radius:4px;\r\n`\r\nexport const FormInputPass = styled.input`\r\n    padding: 16px 16px;\r\n    margin-bottom: 32px;\r\n    border: none;\r\n    border-radius:4px;\r\n    position: relative;\r\n`\r\n\r\nexport const FormButton = styled.button`\r\n    background: #01BF71;\r\n    padding: 16px 0;\r\n    border: none;\r\n    border-radius: 4px;\r\n    color: #fff;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n    cursor: pointer;\r\n    position: relative;\r\n    width: 30px;\r\n    left: 90%;\r\n    top: -230%;\r\n`;","import axios from 'axios';\r\nimport React, {useState, useEffect } from 'react';\r\nimport { setUserSession } from '../Utils/Common';\r\n\r\nimport showPwdImg from './show-password.svg';\r\nimport hidePwdImg from './hide-password.svg';\r\nimport {Container, FormWrap, Icon, FormContent, Form, FormH1, FormLabel, FormInput, FormInputPass, FormButton, Img} from './SigninElements'\r\n\r\nconst SignIn = (props) => {\r\n\r\n    const [email, setEmail]= useState('');\r\n    const [password, setPassword]= useState('');\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading]= useState(false);\r\n    const [isRevealPwd, setIsRevealPwd] = useState(false);\r\n    useEffect(() => {\r\n\t\tdocument.title = 'Admin Login - Solvency';\r\n\t});\r\n    const handelSubmit = (e) => {\r\n        e.preventDefault();\r\n        setError(null)\r\n        setLoading(true)\r\n        axios.post(\"/api/signin\", {\r\n            email: email,\r\n            password: password\r\n        }).then(response => {\r\n            setLoading(false)\r\n            setUserSession(response.data.token)\r\n            props.history.push('/dashboard')\r\n        }).catch(error => {\r\n            setLoading(false);\r\n            if(error.response.status === 404 || error.response.status === 400){\r\n                setError(error.response.data.message)\r\n            }\r\n            else {\r\n                setError(\"Somthing went wrong. Please try again later.\");\r\n            };\r\n            console.error('error >>>>', error);\r\n        })\r\n    }\r\n    return (\r\n        <Container>\r\n            <FormWrap>\r\n                <Icon to=\"/\">Solvency</Icon>\r\n                <FormContent>\r\n                    <Form onSubmit ={handelSubmit} autoComplete=\"off\">\r\n                        <FormH1>Sign in to your account</FormH1>\r\n                        <FormLabel htmlFor='for'>Email</FormLabel>\r\n                        <FormInput value={email} type='email' name='email' required  placeholder='Enter Your Email' onChange={e => setEmail(e.target.value)}/>\r\n                        <FormLabel htmlFor='for'>Password</FormLabel>\r\n                        <FormInputPass value={password} type={isRevealPwd ? \"text\" : \"password\"} name='password' required  placeholder='Enter Your Password' onChange={e => setPassword(e.target.value)} />\r\n                        <Img\r\n                            alt=\"\"\r\n                            title={isRevealPwd ? \"Hide password\" : \"Show password\"}\r\n                            src={isRevealPwd ? hidePwdImg : showPwdImg}\r\n                            onClick={() => setIsRevealPwd(prevState => !prevState)}\r\n                        />\r\n                        {error && <p style={{color: 'red',textAlign: 'Center', paddingBottom: '10px'}}>{error}</p>}\r\n                        <FormButton type='submit' value=\r\n                            {\r\n                            loading ?\r\n                            <img src=\"https://media.giphy.com/media/kUTME7ABmhYg5J3psM/giphy.gif\" alt=\"SignIn\"/> :\r\n                            \"Login\"\r\n                            } \r\n                            disabled={loading} onSubmit={handelSubmit}>SignIn</FormButton>\r\n                    </Form>\r\n                </FormContent>\r\n            </FormWrap>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default SignIn;\r\n"],"sourceRoot":""}